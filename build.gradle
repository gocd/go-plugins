/*
 * Copyright 2021 Thoughtworks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

allprojects {
    apply plugin: 'maven-publish'

    group = 'com.thoughtworks.go'
    version = '1.0'
}

static String versionOf(String dependencySpec) {
    return dependencySpec.split(':').last()
}

ext {
    goVersion = '24.2.0'

    deps = [
        assertJ         : 'org.assertj:assertj-core:3.25.3',
        gson            : 'com.google.code.gson:gson:2.10.1',
        jgit            : 'org.eclipse.jgit:org.eclipse.jgit:6.9.0.202403050737-r',
        junit5          : 'org.junit.jupiter:junit-jupiter-api:5.10.2',
        jsonAssert      : 'org.skyscreamer:jsonassert:1.5.1',
        mockitoCore     : 'org.mockito:mockito-core:5.12.0',
        okHttp          : 'com.squareup.okhttp3:okhttp:4.12.0',
    ]

    versions = project.ext.deps.collectEntries { lib, libGav -> [lib, versionOf(libGav)] }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.release = JavaLanguageVersion.of(17).asInt()
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        compileOnly "com.thoughtworks.go:go-plugin-api:${project.goVersion}"

        testImplementation project.deps.junit5
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${project.versions.junit5}"
        testImplementation project.deps.assertJ
        testImplementation project.deps.mockitoCore
        testImplementation "org.mockito:mockito-junit-jupiter:${project.versions.mockitoCore}"
        testImplementation "com.thoughtworks.go:go-plugin-api:${project.goVersion}"
    }

    jar {
        preserveFileTimestamps = false
        reproducibleFileOrder = true

        manifest {
            attributes "Go-Version": project.goVersion
        }

        archiveFileName = "${base.archivesBaseName}.jar"
    }

    test {
        useJUnitPlatform()
    }
}

task copyJarsToOnePlace(type: Copy, dependsOn: subprojects.jar) {
    from(subprojects.findAll { !['plugin-1', 'plugin-2'].contains(it.name) }.jar)
    into project.file('target/go-plugins-dist/')
}
