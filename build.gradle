/*
 * Copyright 2021 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

allprojects  {
    apply plugin: 'maven-publish'

    group = 'com.thoughtworks.go'
    version = '1.0'
}

ext {
    goVersion = '22.1.0'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.release = JavaLanguageVersion.of(13).asInt()
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        compileOnly "com.thoughtworks.go:go-plugin-api:${project.goVersion}"

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
        testImplementation 'org.assertj:assertj-core:3.22.0'
        testImplementation 'org.mockito:mockito-core:4.4.0'
        testImplementation 'org.mockito:mockito-junit-jupiter:4.4.0'
        testImplementation "com.thoughtworks.go:go-plugin-api:${project.goVersion}"
    }

    jar {
        preserveFileTimestamps = false
        reproducibleFileOrder = true

        manifest {
            attributes "Go-Version": project.goVersion
        }

        archiveFileName = "${archivesBaseName}.jar"
    }

    test {
        useJUnitPlatform()
    }
}

task copyJarsToOnePlace(type: Copy, dependsOn: subprojects.jar) {
  from(subprojects.findAll { !['plugin-1', 'plugin-2'].contains(it.name) }.jar)
  into project.file('target/go-plugins-dist/')
}
